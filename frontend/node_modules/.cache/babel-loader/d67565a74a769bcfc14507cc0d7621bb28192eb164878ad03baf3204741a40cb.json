{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hasan Memi\\u015F\\\\Desktop\\\\DuyguAI_Yeni\\\\frontend\\\\src\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import EmotionInput from '../components/EmotionInput';\n// import '../styles/HomePage.css';\n\n// export default function HomePage() {\n//   const [result, setResult] = useState(null);\n\n//   // 🎼 20 nota için rastgele parametreler oluştur\n//   const notes = Array.from({ length: 20 }).map((_, i) => ({\n//     id: i,\n//     left: Math.random() * 100,              // yatay yüzde konum\n//     fallDur: 8 + Math.random() * 6,         // 8–14 saniye arası düşme süresi\n//     swayDur: 3 + Math.random() * 3,         // 3–6 saniye arası yalpalanma süresi\n//     size: 16 + Math.random() * 24,          // 16–40px arası ikon boyutu\n//     color: `hsl(${Math.random() * 360}, 80%, 75%)` // rastgele pastel renk\n//   }));\n\n//   return (\n//     <div className=\"homepage\">\n//       {/* 🎼 Arka planda akan notalar */}\n//       <div className=\"notes-container\">\n//         {notes.map(n => (\n//           <span\n//             key={n.id}\n//             className=\"note\"\n//             style={{\n//               left: `${n.left}%`,           // CSS değişkenlerini inline set ediyoruz\n//               '--fall-dur': `${n.fallDur}s`,\n//               '--sway-dur': `${n.swayDur}s`,\n//               '--note-size': `${n.size}px`,\n//               '--note-color': n.color\n//             }}\n//           >\n//             ♪\n//           </span>\n//         ))}\n//       </div>\n\n//       {/* Başlık */}\n//       <h1>Duygu Analizi + Müzik Öneri</h1>\n\n//       {/* 📝 Duygu Giriş Bölümü */}\n//       <div className=\"emotion-section\">\n//         <EmotionInput onResults={setResult} />\n//       </div>\n\n//       {/* 📊 Analiz Sonuçları ve Müzik Kartları */}\n//       {result && (\n//         <div className=\"results\">\n//           <div className=\"details\">\n//             {result.channels?.text && (\n//               <p>\n//                 📄 Metin: {result.channels.text.label} (\n//                 %{Math.round(result.channels.text.score * 100)})\n//               </p>\n//             )}\n//             {result.channels?.face && (\n//               <p>\n//                 📷 Yüz: {result.channels.face.label} (\n//                 %{Math.round(result.channels.face.score * 100)})\n//               </p>\n//             )}\n//             {result.fused_emotion && (\n//               <p>\n//                 🧠 Füzyon: {result.fused_emotion.label} (\n//                 %{Math.round(result.fused_emotion.score * 100)})\n//               </p>\n//             )}\n//           </div>\n\n//           <div className=\"music-list\">\n//             {result.recommended_music.map((uri) => {\n//               const trackId = uri.split(':').pop();\n//               return (\n//                 <div key={trackId} className=\"music-card\">\n//                   <iframe\n//                     title={trackId}\n//                     src={`https://open.spotify.com/embed/track/${trackId}`}\n//                     allow=\"autoplay; encrypted-media\"\n//                   />\n//                 </div>\n//               );\n//             })}\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\nimport React, { useState } from 'react';\nimport EmotionInput from '../components/EmotionInput';\nimport { BACKEND_URL } from '../config';\nimport '../styles/HomePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n  const [result, setResult] = useState(null);\n\n  // 🎼 Nota parametreleri...\n  const notes = Array.from({\n    length: 20\n  }).map((_, i) => ({\n    id: i,\n    left: Math.random() * 100,\n    fallDur: 8 + Math.random() * 6,\n    swayDur: 3 + Math.random() * 3,\n    size: 16 + Math.random() * 24,\n    color: `hsl(${Math.random() * 360}, 80%, 75%)`\n  }));\n\n  // Feedback gönder\n  const sendFeedback = async (trackId, liked) => {\n    try {\n      await fetch(`${BACKEND_URL}/api/feedback`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          track_id: trackId,\n          liked\n        })\n      });\n    } catch (e) {\n      console.error('Feedback error', e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-container\",\n      children: notes.map(n => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"note\",\n        style: {\n          left: `${n.left}%`,\n          '--fall-dur': `${n.fallDur}s`,\n          '--sway-dur': `${n.swayDur}s`,\n          '--note-size': `${n.size}px`,\n          '--note-color': n.color\n        },\n        children: \"\\u266A\"\n      }, n.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Duygu Analizi + M\\xFCzik \\xD6neri\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"emotion-section\",\n      children: /*#__PURE__*/_jsxDEV(EmotionInput, {\n        onResults: setResult\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"music-list\",\n        children: result.recommended_music.map(uri => {\n          const trackId = uri.split(':').pop();\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"music-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n              title: trackId,\n              src: `https://open.spotify.com/embed/track/${trackId}`,\n              allow: \"autoplay; encrypted-media\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"track-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => sendFeedback(trackId, true),\n                children: \"\\uD83D\\uDC4D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => sendFeedback(trackId, false),\n                children: \"\\uD83D\\uDC4E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this)]\n          }, trackId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"X4bz0btR6WTE+CkTerVmRyY/5iQ=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","EmotionInput","BACKEND_URL","jsxDEV","_jsxDEV","HomePage","_s","result","setResult","notes","Array","from","length","map","_","i","id","left","Math","random","fallDur","swayDur","size","color","sendFeedback","trackId","liked","fetch","method","headers","body","JSON","stringify","track_id","e","console","error","className","children","n","style","fileName","_jsxFileName","lineNumber","columnNumber","onResults","recommended_music","uri","split","pop","title","src","allow","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Hasan Memiş/Desktop/DuyguAI_Yeni/frontend/src/pages/HomePage.js"],"sourcesContent":["\r\n// import React, { useState } from 'react';\r\n// import EmotionInput from '../components/EmotionInput';\r\n// import '../styles/HomePage.css';\r\n\r\n// export default function HomePage() {\r\n//   const [result, setResult] = useState(null);\r\n\r\n//   // 🎼 20 nota için rastgele parametreler oluştur\r\n//   const notes = Array.from({ length: 20 }).map((_, i) => ({\r\n//     id: i,\r\n//     left: Math.random() * 100,              // yatay yüzde konum\r\n//     fallDur: 8 + Math.random() * 6,         // 8–14 saniye arası düşme süresi\r\n//     swayDur: 3 + Math.random() * 3,         // 3–6 saniye arası yalpalanma süresi\r\n//     size: 16 + Math.random() * 24,          // 16–40px arası ikon boyutu\r\n//     color: `hsl(${Math.random() * 360}, 80%, 75%)` // rastgele pastel renk\r\n//   }));\r\n\r\n//   return (\r\n//     <div className=\"homepage\">\r\n//       {/* 🎼 Arka planda akan notalar */}\r\n//       <div className=\"notes-container\">\r\n//         {notes.map(n => (\r\n//           <span\r\n//             key={n.id}\r\n//             className=\"note\"\r\n//             style={{\r\n//               left: `${n.left}%`,           // CSS değişkenlerini inline set ediyoruz\r\n//               '--fall-dur': `${n.fallDur}s`,\r\n//               '--sway-dur': `${n.swayDur}s`,\r\n//               '--note-size': `${n.size}px`,\r\n//               '--note-color': n.color\r\n//             }}\r\n//           >\r\n//             ♪\r\n//           </span>\r\n//         ))}\r\n//       </div>\r\n\r\n//       {/* Başlık */}\r\n//       <h1>Duygu Analizi + Müzik Öneri</h1>\r\n\r\n//       {/* 📝 Duygu Giriş Bölümü */}\r\n//       <div className=\"emotion-section\">\r\n//         <EmotionInput onResults={setResult} />\r\n//       </div>\r\n\r\n//       {/* 📊 Analiz Sonuçları ve Müzik Kartları */}\r\n//       {result && (\r\n//         <div className=\"results\">\r\n//           <div className=\"details\">\r\n//             {result.channels?.text && (\r\n//               <p>\r\n//                 📄 Metin: {result.channels.text.label} (\r\n//                 %{Math.round(result.channels.text.score * 100)})\r\n//               </p>\r\n//             )}\r\n//             {result.channels?.face && (\r\n//               <p>\r\n//                 📷 Yüz: {result.channels.face.label} (\r\n//                 %{Math.round(result.channels.face.score * 100)})\r\n//               </p>\r\n//             )}\r\n//             {result.fused_emotion && (\r\n//               <p>\r\n//                 🧠 Füzyon: {result.fused_emotion.label} (\r\n//                 %{Math.round(result.fused_emotion.score * 100)})\r\n//               </p>\r\n//             )}\r\n//           </div>\r\n\r\n//           <div className=\"music-list\">\r\n//             {result.recommended_music.map((uri) => {\r\n//               const trackId = uri.split(':').pop();\r\n//               return (\r\n//                 <div key={trackId} className=\"music-card\">\r\n//                   <iframe\r\n//                     title={trackId}\r\n//                     src={`https://open.spotify.com/embed/track/${trackId}`}\r\n//                     allow=\"autoplay; encrypted-media\"\r\n//                   />\r\n//                 </div>\r\n//               );\r\n//             })}\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nimport React, { useState } from 'react';\r\nimport EmotionInput from '../components/EmotionInput';\r\nimport { BACKEND_URL } from '../config';\r\nimport '../styles/HomePage.css';\r\n\r\nexport default function HomePage() {\r\n  const [result, setResult] = useState(null);\r\n\r\n  // 🎼 Nota parametreleri...\r\n  const notes = Array.from({ length: 20 }).map((_, i) => ({\r\n    id: i,\r\n    left: Math.random() * 100,\r\n    fallDur: 8 + Math.random() * 6,\r\n    swayDur: 3 + Math.random() * 3,\r\n    size: 16 + Math.random() * 24,\r\n    color: `hsl(${Math.random() * 360}, 80%, 75%)`\r\n  }));\r\n\r\n  // Feedback gönder\r\n  const sendFeedback = async (trackId, liked) => {\r\n    try {\r\n      await fetch(`${BACKEND_URL}/api/feedback`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ track_id: trackId, liked })\r\n      });\r\n    } catch (e) {\r\n      console.error('Feedback error', e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"homepage\">\r\n      {/* 🎼 Notalar */}\r\n      <div className=\"notes-container\">\r\n        {notes.map(n => (\r\n          <span\r\n            key={n.id}\r\n            className=\"note\"\r\n            style={{\r\n              left: `${n.left}%`,\r\n              '--fall-dur': `${n.fallDur}s`,\r\n              '--sway-dur': `${n.swayDur}s`,\r\n              '--note-size': `${n.size}px`,\r\n              '--note-color': n.color\r\n            }}\r\n          >♪</span>\r\n        ))}\r\n      </div>\r\n\r\n      <h1>Duygu Analizi + Müzik Öneri</h1>\r\n      <div className=\"emotion-section\">\r\n        <EmotionInput onResults={setResult} />\r\n      </div>\r\n\r\n      {result && (\r\n        <div className=\"results\">\r\n          <div className=\"details\">\r\n            {/* ...mevcut detaylar */}\r\n          </div>\r\n          <div className=\"music-list\">\r\n            {result.recommended_music.map((uri) => {\r\n              const trackId = uri.split(':').pop();\r\n              return (\r\n                <div key={trackId} className=\"music-card\">\r\n                  <iframe\r\n                    title={trackId}\r\n                    src={`https://open.spotify.com/embed/track/${trackId}`}\r\n                    allow=\"autoplay; encrypted-media\"\r\n                  />\r\n                  {/* 👍👎 butonları */}\r\n                  <div className=\"track-actions\">\r\n                    <button onClick={() => sendFeedback(trackId, true)}>👍</button>\r\n                    <button onClick={() => sendFeedback(trackId, false)}>👎</button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,4BAA4B;AACrD,SAASC,WAAW,QAAQ,WAAW;AACvC,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;;EAE1C;EACA,MAAMS,KAAK,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAG,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,MAAM;IACtDC,EAAE,EAAED,CAAC;IACLE,IAAI,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;IACzBC,OAAO,EAAE,CAAC,GAAGF,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC;IAC9BE,OAAO,EAAE,CAAC,GAAGH,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC;IAC9BG,IAAI,EAAE,EAAE,GAAGJ,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE;IAC7BI,KAAK,EAAE,OAAOL,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;EACnC,CAAC,CAAC,CAAC;;EAEH;EACA,MAAMK,YAAY,GAAG,MAAAA,CAAOC,OAAO,EAAEC,KAAK,KAAK;IAC7C,IAAI;MACF,MAAMC,KAAK,CAAC,GAAGzB,WAAW,eAAe,EAAE;QACzC0B,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,QAAQ,EAAER,OAAO;UAAEC;QAAM,CAAC;MACnD,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOQ,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,gBAAgB,EAAEF,CAAC,CAAC;IACpC;EACF,CAAC;EAED,oBACE9B,OAAA;IAAKiC,SAAS,EAAC,UAAU;IAAAC,QAAA,gBAEvBlC,OAAA;MAAKiC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC7B7B,KAAK,CAACI,GAAG,CAAC0B,CAAC,iBACVnC,OAAA;QAEEiC,SAAS,EAAC,MAAM;QAChBG,KAAK,EAAE;UACLvB,IAAI,EAAE,GAAGsB,CAAC,CAACtB,IAAI,GAAG;UAClB,YAAY,EAAE,GAAGsB,CAAC,CAACnB,OAAO,GAAG;UAC7B,YAAY,EAAE,GAAGmB,CAAC,CAAClB,OAAO,GAAG;UAC7B,aAAa,EAAE,GAAGkB,CAAC,CAACjB,IAAI,IAAI;UAC5B,cAAc,EAAEiB,CAAC,CAAChB;QACpB,CAAE;QAAAe,QAAA,EACH;MAAC,GATKC,CAAC,CAACvB,EAAE;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASH,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENxC,OAAA;MAAAkC,QAAA,EAAI;IAA2B;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpCxC,OAAA;MAAKiC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9BlC,OAAA,CAACH,YAAY;QAAC4C,SAAS,EAAErC;MAAU;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,EAELrC,MAAM,iBACLH,OAAA;MAAKiC,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBlC,OAAA;QAAKiC,SAAS,EAAC;MAAS;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEnB,CAAC,eACNxC,OAAA;QAAKiC,SAAS,EAAC,YAAY;QAAAC,QAAA,EACxB/B,MAAM,CAACuC,iBAAiB,CAACjC,GAAG,CAAEkC,GAAG,IAAK;UACrC,MAAMtB,OAAO,GAAGsB,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC;UACpC,oBACE7C,OAAA;YAAmBiC,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACvClC,OAAA;cACE8C,KAAK,EAAEzB,OAAQ;cACf0B,GAAG,EAAE,wCAAwC1B,OAAO,EAAG;cACvD2B,KAAK,EAAC;YAA2B;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC,eAEFxC,OAAA;cAAKiC,SAAS,EAAC,eAAe;cAAAC,QAAA,gBAC5BlC,OAAA;gBAAQiD,OAAO,EAAEA,CAAA,KAAM7B,YAAY,CAACC,OAAO,EAAE,IAAI,CAAE;gBAAAa,QAAA,EAAC;cAAE;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC/DxC,OAAA;gBAAQiD,OAAO,EAAEA,CAAA,KAAM7B,YAAY,CAACC,OAAO,EAAE,KAAK,CAAE;gBAAAa,QAAA,EAAC;cAAE;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7D,CAAC;UAAA,GAVEnB,OAAO;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAWZ,CAAC;QAEV,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACtC,EAAA,CA9EuBD,QAAQ;AAAAiD,EAAA,GAARjD,QAAQ;AAAA,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}